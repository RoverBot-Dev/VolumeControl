"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceType = exports.AudioSessionState = void 0;
var os = require("os");
var sMixerModule = (function () {
    var getModule = function (platform, arch) {
        if (arch === void 0) { arch = undefined; }
        return require(__dirname + "/addons/" + platform + "-sound-mixer" + (arch ? "_" + arch : "") + ".node");
    };
    var platform = os.platform();
    var arch = os.arch();
    if (platform === "win32") {
        if (arch === "x32" || arch === "x64" || arch === "ia32") {
            return getModule("win");
        }
    }
    else if (platform == "linux") {
        if (arch === "x32" || arch === "x64" || arch === "ia32")
            return getModule("linux");
    }
    throw new Error("could not get the binary file");
})();
var AudioSessionState;
(function (AudioSessionState) {
    AudioSessionState[AudioSessionState["ACTIVE"] = 0] = "ACTIVE";
    AudioSessionState[AudioSessionState["INACTIVE"] = 1] = "INACTIVE";
    AudioSessionState[AudioSessionState["EXPIRED"] = 2] = "EXPIRED";
})(AudioSessionState = exports.AudioSessionState || (exports.AudioSessionState = {}));
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["CAPTURE"] = 1] = "CAPTURE";
    DeviceType[DeviceType["RENDER"] = 0] = "RENDER";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
exports.default = sMixerModule.SoundMixer;
//# sourceMappingURL=sound-mixer.js.map